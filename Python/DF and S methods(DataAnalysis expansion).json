[{"df.drop()": "devuelve la instancia pero sin lo dropeado. Recordar que la funcion busca por indice(agregar .index al final de la operacion), si se desea dropear una columna se debe especificar el axis=1.", "df.rename()": "para cambiar nombre de objetos(obviamente)(turbio).", "inst.head(n) and inst.tail(n)": "muestra los primeros y ultimos(respectivamente) n elementos del df, n=5 default.", "df.set_index= col": "cambia el indice a lo indicado(otra columna).", "df.dropna(arg)": "eliminas las fila que tengan al menos un valor nulo, en la opciones de arg se puede cambiar.", "df.fillna(arg)": "rellena los valores nulos con arg, cualquier cosa, con 'method=bfill or ffill' rellena automatico con los valores cercanos en la tabla.", "s.unique()": "el DISTINTIC de SQL en pandas; inst.nunique los cuenta.", "df.value_counts()": "cuenta la cantidad de valores distintos(agrupandolos por separado).", "df.replace(old,new)": "cambia old for new.", "inst.to_csv(path)": "permite guardar como csv.", "df.groupby(arg)": "agrupa por unique y se le puede pasar otro argumento por el que se quiera diferenciar los datos.", "inst.sample(#)": "muestra 10 records aleatorios. ", "df.merge(dataframe,on=col)": "une esta inst con otro data frame por la columna que tengan igual especificada en on.\n \ns.astype(type) - devuelve esa columna convertida al otro type especificado.", "df.sort_values()": "sortea los valores; ascending= False : organiza de forma descendiente;by=[columns] especifica las columnas.", "inst.duplicated()": "devuelve 0 or 1 segun valores repetidos, subdet=[columna] para specificar", "inst.drop_duplicated()": "dropea repetidos.", "inst.count()": "cuenta todos los datos. ", "s.median()": "evuelve la mediana.", "s.quantile(%)": "devuelve el porciento especificado.", "s.mode()": "devuelve el valor mas usado."}]