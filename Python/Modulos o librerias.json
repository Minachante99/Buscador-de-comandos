[
  {
    "import random ": " random.randint(range) : selecciona un int random in \"range\", random.choice(variable) : selecciona pseudoaleatoriamente;random.seed(arg) - para agregarle una semilla inicial.",
    "import string ": " string.punctuation : signos de puntuacion, string.ascii_upper(lower)case, para trabajar con el abecedario",
    "import math ": " math.sin(variable) : halla el seno de \"variable\", math.sqrt(variable) : halla raiz cuadrada de \"variable\", math.pi: invoca pi para trabajar con el",
    "import re ": " re.search(argumento, variable) : busca \"argumento\" en la variable especificada, re.findall(argumento, variable) : devuelve una lista de todos los strings \"argumento\" encontrados en variable;re.compile() - para compilar una regex y pasarselas a otras funciones.",
    "import json ": " json.dump(\"argumento_1\", \"argumento_2\"): guarda \"argumento_1\" en el archivo \"argumento_2\", json.load(\"argumento\") : carga \"argumento\" previamente cargado con open() y devuelve todo lo dentro del json",
    "import sys": "Se utiliza principalmente en programaci\u00f3n orientada al sistema(M\u00e1s sobre el tema en SystemProgramming).",
    "import datetime": "datetime.datetime.now() : retorna la fecha y hora actual, datetime.date() : acepta fechas para hacer calculos,datetime.date.today() : devuelve la fecha actual",
    "import this": "el zen de python.",
    "import os": "Se utiliza en la programaci\u00f3n orientada al sistema.",
    "import multiprocessing": "Es para levantar procesos independientes, es una alternativa al fork/exce en Linux , trabaja de manera similar al m\u00f3dulo threading,tiene una clase Thread and Loco y m\u00e1s en 6,multiprocessing.cpu_count() : retorna un int con la cantidad de cpu usandose.",
    "import cProfile": "muestra estadisticas sobre cuantas veces y por cuanto tiempo fueron ejecutadasvarias partes del programa; cProfile.run(arg) : en arg especificamos la funcion, debenhams ser pasada como un string.",
    "import glob": "para buscar archivos dentro se la carpeta dondw ae ejecuta el codigo, glob.glob('arg') : devuelve una lista con todos los nombres de archivos que encajan.",
    "import time": "turbiedad, time.sleep(#) : detiene el proceso segun el numero de segundos introducidos.",
    "import __thread": "para trabajar con threads(lightweight)(ronnie), creando varios threads en un mismo programa llamando funciones dentro de ellos.Todos comparten el mismo standard output",
    "import threading": "se usa para manejar threads a alto nivel, que en muchos de sus casos usa internamente a _thread. La gran diferencia es que este es usado en OOP, para customizar clases, para heredar de una clase Thread, donde podemos customizar su __init__ y la funcion run().",
    "import queue": "es un bolsillo dimensional que es usafdo por los threads para leer y guardar cosas. Metodos en 6.",
    "import pandas": "pandas se usa pra procesar datos utilizando de fondo numpy.",
    "import numpy": "para trabajar con numeros, ta potente.",
    "import matplotlib.pyplot": "para visualizar datos.",
    "import seaborn": "para visualizar data, pone matploylib mas bonito(uwu).",
    "import PIL": "para trabajar con imagenes; PIL.Image.open(arg) cargar la foto.",
    "import sklearn": "importa scikit-learn, para trabajar con machine learning. Revisar adentro todas las ramas y clases en la cheat sheat.",
    "import thefuzz": "para turbiedad(so far); thefuzz.fuzz.partial_ratio(arg1,arg2) : se usa para calcular Levenshtein distance between two cadenas de caracteres(strings) calculando el peque\u00f1o con respeco al grande.",
    "import scipy": "libreria para tallas cienificas; stats.linregress(x,y) regresion lineal entre esas dos variables para estimar a futuro; scipy.stats.trim_mean(obj,percent) : para hallar el trimmed mean que es quitar un porcentaje de datos a cada lado(mas pequenos y mas grandes) siendo esto mas robusto que el promedio normal; scipy.stats.probplot(data,plot= ax) - para plotear la distribucion normal, en plot hay que especificar el subplot.",
    "import joblib": "para salvar y cargar archivos manteniendo su forma original de objetos de python(que supuestamente trabaja mas rapido que pickle ya que esta optimizado para arrays); joblib.load(arg) : carga arg; joblib.dump(arg,file) : salva arg en nombre de archivo(.joblib).",
    "import mlxtend": "so far para plotear decisions boundaries de los modelos(zona de decisiones confusas ggg); mlxtend.plotting.plot_decision_regions(X,y,clf): en clf especificamos la instancia de modelo.",
    "import xgboost": "para trabajar con XGBClassifier() el cual es un ensemble model mejorado.",
    "import nltk": "la libreria mas usada para analisis de sentimientos en Natural Language Processing(NLP),mas en wb and nlp.",
    "import hyperopt": "libreria de optimizacion de hyperparameters, se el modulo hyperopt.hp.(uniform,quniform,loguniform): para seleccionar valores entre un min/max.",
    "import mlt_class": "contiene dos clases principales,XGBs(arboles xgboost) y SVMs(SVMs, normal y linear) que se alimentan en la clase general MlT, al iniciar la clase hay que pasarle features and targets, y al utilizar una de las funciones se le debe pasar tipo de problema('c' por clasificacion y 'r' de regresion); escorer default es f1 y mae respectivamente; average default binario, 'w' para weighteado, para mas leer documentacion.",
    "import bs4": "libreria para parsear documentos web(html,xml,json,etc).Mas en web scraping module.",
    "import scrapy": "framework para web scraping, hace la vida mas facil crear crawlers.",
    "import psycopg2": "para trabajar con postgresql desde python, psycopg2.connect(host,database,user,password) conecta con el server; conection_obj.cursor() - para crear el cursor; las query que uno haga se guardan en el cursor; cursor_obj.excecute(query) - para ejecutrar querys que despues se pueden obtener en cursor_obj.fetch_one() or fetch_all(); conection_obj.commit() para ejucutar los cambios hechos en la db, conn_obj.close() para cerrar la conexion.",
    "import requests": "para trabajar con internet,mas en web scraping.",
    "import selenium": "libreria de web scrapping.",
    "import wget": "para hacer descargas(hasta ahora); wget.download(url,out) - para descargar un archivo;out es para la carpeta de salida.",
    "import seleniumbase": "es el todo en uno de selenium; seleniumbase.Driver(uc=True) devuelve el driver con chromne instanciado utilizando el undetected chomedriver."
  }
]